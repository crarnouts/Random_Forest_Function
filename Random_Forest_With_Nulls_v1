
subset_columns <- function(data,targetvariable,cols_in_rf){  #target variable is inputted as column vector

  newdata <- as.data.frame(data[[targetvariable]])  ## we intialize the new dataset that this iteration of the random forest will run on (decision tree)

  colnames(newdata)<- c("target")




  for (i in 1:cols_in_rf){

    target_num <- grep(targetvariable, colnames(data))

    ncols <- ncol(data)

    random_col_num <- round(runif(1, min=1, max=ncols))

    if(random_col_num == target_num)
    {

    }
    else
    {
      newdata[[colnames(data[random_col_num])]] <- data[,c(colnames(data[random_col_num]))] # this grabs the random column vector and assigns it to the new subsetted dataset

      data[,c(colnames(data[random_col_num]))] <- NULL #removes the chosen column so that it is not chosen again for the particular tree
    }

  }

  return(newdata)
}





subset_rows <- function(data,targetvariable,percent_of_rows){

  train.index <- createDataPartition(data[[targetvariable]], p = percent_of_rows, list = FALSE)
  data_out <- data_dt2[ train.index,]


  return(data_out)
}




RF_with_Nulls <- function(data,data_to_score,targetvariable,percent_of_rows,cols_in_rf,iterations){

  for (i in 1:iterations){
    training_data <- subset_rows(data, targetvariable,percent_of_rows)

    training_data2 <- subset_columns(training_data,targetvariable,cols_in_rf)



    form <- as.formula(target~ .)

    assign(paste("model_", i, sep = ""), rpart(form,data=training_data2))

    data_to_score[[paste("prediction_", i, sep = "")]] <- predict(get(paste0("model_", i)), newdata=data_to_score)

    fancyRpartPlot(rpart(form,data=training_data2),palettes=("Reds"))
  }



  return(data_to_score)

}
